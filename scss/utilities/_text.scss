@use "sass:map";
@use "../mixins/breakpoints";
@use "../mixins/text-emphasis";
@use "../mixins/text-hide";
@use "../mixins/text-truncate";
@use "../variables";

//
// Text
//

// Alignment

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate.text-truncate; }

// Responsive alignment

@each $breakpoint in map.keys(variables.$grid-breakpoints) {
  @include breakpoints.media-breakpoint-up($breakpoint) {
    $infix: breakpoints.breakpoint-infix($breakpoint, variables.$grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Weight and italics

.font-weight-normal { font-weight: variables.$font-weight-normal; }
.font-weight-bold   { font-weight: variables.$font-weight-bold; }
.font-italic        { font-style: italic; }

// Contextual colors

.text-white {
  color: #fff !important;
}

@include text-emphasis.text-emphasis-variant('.text-muted', variables.$text-muted);

@include text-emphasis.text-emphasis-variant('.text-primary', variables.$brand-primary);

@include text-emphasis.text-emphasis-variant('.text-success', variables.$brand-success);

@include text-emphasis.text-emphasis-variant('.text-info', variables.$brand-info);

@include text-emphasis.text-emphasis-variant('.text-warning', variables.$brand-warning);

@include text-emphasis.text-emphasis-variant('.text-danger', variables.$brand-danger);

// Font color

@include text-emphasis.text-emphasis-variant('.text-gray-dark', variables.$gray-dark);

// Misc

.text-hide {
  @include text-hide.text-hide();
}
