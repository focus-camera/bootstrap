@use "mixins";
@use "mixins/border-radius";
@use "mixins/reset-text";
@use "variables";

@use "sass:color";

.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: variables.$zindex-popover;
  display: block;
  max-width: variables.$popover-max-width;
  padding: variables.$popover-inner-padding;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text.reset-text();
  font-size: variables.$font-size-sm;
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: variables.$popover-bg;
  background-clip: padding-box;
  border: variables.$popover-border-width solid variables.$popover-border-color;
  @include border-radius.border-radius(variables.$border-radius-lg);
  @include mixins.box-shadow(variables.$popover-box-shadow);


  // Popover directions

  &.popover-top,
  &.bs-tether-element-attached-bottom {
    margin-top: -(variables.$popover-arrow-width);

    &::before,
    &::after {
      left: 50%;
      border-bottom-width: 0;
    }

    &::before {
      bottom: -(variables.$popover-arrow-outer-width);
      margin-left: -(variables.$popover-arrow-outer-width);
      border-top-color: variables.$popover-arrow-outer-color;
    }

    &::after {
      bottom: -(variables.$popover-arrow-outer-width - 1);
      margin-left: -(variables.$popover-arrow-width);
      border-top-color: variables.$popover-arrow-color;
    }
  }

  &.popover-right,
  &.bs-tether-element-attached-left {
    margin-left: variables.$popover-arrow-width;

    &::before,
    &::after {
      top: 50%;
      border-left-width: 0;
    }

    &::before {
      left: -(variables.$popover-arrow-outer-width);
      margin-top: -(variables.$popover-arrow-outer-width);
      border-right-color: variables.$popover-arrow-outer-color;
    }

    &::after {
      left: -(variables.$popover-arrow-outer-width - 1);
      margin-top: -(variables.$popover-arrow-outer-width - 1);
      border-right-color: variables.$popover-arrow-color;
    }
  }

  &.popover-bottom,
  &.bs-tether-element-attached-top {
    margin-top: variables.$popover-arrow-width;

    &::before,
    &::after {
      left: 50%;
      border-top-width: 0;
    }

    &::before {
      top: -(variables.$popover-arrow-outer-width);
      margin-left: -(variables.$popover-arrow-outer-width);
      border-bottom-color: variables.$popover-arrow-outer-color;
    }

    &::after {
      top: -(variables.$popover-arrow-outer-width - 1);
      margin-left: -(variables.$popover-arrow-width);
      border-bottom-color: variables.$popover-title-bg;
    }

    // This will remove the popover-title's border just below the arrow
    .popover-title::before {
      position: absolute;
      top: 0;
      left: 50%;
      display: block;
      width: 20px;
      margin-left: -10px;
      content: "";
      border-bottom: 1px solid variables.$popover-title-bg;
    }
  }

  &.popover-left,
  &.bs-tether-element-attached-right {
    margin-left: -(variables.$popover-arrow-width);

    &::before,
    &::after {
      top: 50%;
      border-right-width: 0;
    }

    &::before {
      right: -(variables.$popover-arrow-outer-width);
      margin-top: -(variables.$popover-arrow-outer-width);
      border-left-color: variables.$popover-arrow-outer-color;
    }

    &::after {
      right: -(variables.$popover-arrow-outer-width - 1);
      margin-top: -(variables.$popover-arrow-outer-width - 1);
      border-left-color: variables.$popover-arrow-color;
    }
  }
}


// Offset the popover to account for the popover arrow
.popover-title {
  padding: variables.$popover-title-padding-y variables.$popover-title-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  font-size: variables.$font-size-base;
  background-color: variables.$popover-title-bg;
  border-bottom: variables.$popover-border-width solid color.adjust(variables.$popover-title-bg, $lightness: -5%);
  $offset-border-width: calc(#{variables.$border-radius-lg} - #{variables.$popover-border-width});
  @include border-radius.border-top-radius($offset-border-width);

  &:empty {
    display: none;
  }
}

.popover-content {
  padding: variables.$popover-content-padding-y variables.$popover-content-padding-x;
}


// Arrows
//
// .popover-arrow is outer, .popover-arrow::after is inner

.popover::before,
.popover::after {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}

.popover::before {
  content: "";
  border-width: variables.$popover-arrow-outer-width;
}
.popover::after {
  content: "";
  border-width: variables.$popover-arrow-width;
}
