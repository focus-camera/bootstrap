@use "mixins/border-radius";
@use "mixins/breakpoints";
@use "mixins/cards";
@use "mixins/hover";
@use "variables";

//
// Base styles
//

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  background-color: variables.$card-bg;
  border: variables.$card-border-width solid variables.$card-border-color;
  @include border-radius.border-radius(variables.$card-border-radius);
}

.card-block {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: variables.$card-spacer-x;
}

.card-title {
  margin-bottom: variables.$card-spacer-y;
}

.card-subtitle {
  margin-top: -(variables.$card-spacer-y * 0.5);
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link {
  @include hover.hover {
    text-decoration: none;
  }

  + .card-link {
    margin-left: variables.$card-spacer-x;
  }
}

.card {
  > .list-group:first-child {
    .list-group-item:first-child {
      @include border-radius.border-top-radius(variables.$card-border-radius);
    }
  }

  > .list-group:last-child {
    .list-group-item:last-child {
      @include border-radius.border-bottom-radius(variables.$card-border-radius);
    }
  }
}


//
// Optional textual caps
//

.card-header {
  padding: variables.$card-spacer-y variables.$card-spacer-x;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  background-color: variables.$card-cap-bg;
  border-bottom: variables.$card-border-width solid variables.$card-border-color;

  &:first-child {
    @include border-radius.border-radius(variables.$card-border-radius-inner variables.$card-border-radius-inner 0 0);
  }
}

.card-footer {
  padding: variables.$card-spacer-y variables.$card-spacer-x;
  background-color: variables.$card-cap-bg;
  border-top: variables.$card-border-width solid variables.$card-border-color;

  &:last-child {
    @include border-radius.border-radius(0 0 variables.$card-border-radius-inner variables.$card-border-radius-inner);
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: -(variables.$card-spacer-x * 0.5);
  margin-bottom: -(variables.$card-spacer-y);
  margin-left: -(variables.$card-spacer-x * 0.5);
  border-bottom: 0;
}

.card-header-pills {
  margin-right: -(variables.$card-spacer-x * 0.5);
  margin-left: -(variables.$card-spacer-x * 0.5);
}


//
// Background variations
//

.card-primary {
  @include cards.card-variant(variables.$brand-primary, variables.$brand-primary);
}
.card-success {
  @include cards.card-variant(variables.$brand-success, variables.$brand-success);
}
.card-info {
  @include cards.card-variant(variables.$brand-info, variables.$brand-info);
}
.card-warning {
  @include cards.card-variant(variables.$brand-warning, variables.$brand-warning);
}
.card-danger {
  @include cards.card-variant(variables.$brand-danger, variables.$brand-danger);
}

// Remove all backgrounds
.card-outline-primary {
  @include cards.card-outline-variant(variables.$btn-primary-bg);
}
.card-outline-secondary {
  @include cards.card-outline-variant(variables.$btn-secondary-border);
}
.card-outline-info {
  @include cards.card-outline-variant(variables.$btn-info-bg);
}
.card-outline-success {
  @include cards.card-outline-variant(variables.$btn-success-bg);
}
.card-outline-warning {
  @include cards.card-outline-variant(variables.$btn-warning-bg);
}
.card-outline-danger {
  @include cards.card-outline-variant(variables.$btn-danger-bg);
}

//
// Inverse text within a card for use with dark backgrounds
//

.card-inverse {
  @include cards.card-inverse;
}

//
// Blockquote
//

.card-blockquote {
  padding: 0;
  margin-bottom: 0;
  border-left: 0;
}

// Card image
.card-img {
  // margin: -1.325rem;
  @include border-radius.border-radius(variables.$card-border-radius-inner);
}
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: variables.$card-img-overlay-padding;
}



// Card image caps
.card-img-top {
  @include border-radius.border-top-radius(variables.$card-border-radius-inner);
}
.card-img-bottom {
  @include border-radius.border-bottom-radius(variables.$card-border-radius-inner);
}


// Card deck

@include breakpoints.media-breakpoint-up(sm) {
  .card-deck {
    display: flex;
    flex-flow: row wrap;

    .card {
      display: flex;
      flex: 1 0 0;
      flex-direction: column;

      // Selectively apply horizontal margins to cards to avoid doing the
      // negative margin dance like our grid. This differs from the grid
      // due to the use of margins as gutters instead of padding.
      &:not(:first-child) { margin-left: variables.$card-deck-margin; }
      &:not(:last-child) { margin-right: variables.$card-deck-margin; }
    }
  }
}


//
// Card groups
//

@include breakpoints.media-breakpoint-up(sm) {
  .card-group {
    display: flex;
    flex-flow: row wrap;

    .card {
      flex: 1 0 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if variables.$enable-rounded {
        &:first-child {
          @include border-radius.border-right-radius(0);

          .card-img-top {
            border-top-right-radius: 0;
          }
          .card-img-bottom {
            border-bottom-right-radius: 0;
          }
        }
        &:last-child {
          @include border-radius.border-left-radius(0);

          .card-img-top {
            border-top-left-radius: 0;
          }
          .card-img-bottom {
            border-bottom-left-radius: 0;
          }
        }

        &:not(:first-child):not(:last-child) {
          border-radius: 0;

          .card-img-top,
          .card-img-bottom {
            border-radius: 0;
          }
        }
      }
    }
  }
}


//
// Columns
//

@include breakpoints.media-breakpoint-up(sm) {
  .card-columns {
    column-count: variables.$card-columns-count;
    column-gap: variables.$card-columns-gap;

    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
      margin-bottom: variables.$card-columns-margin;
    }
  }
}
