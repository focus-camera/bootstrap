@use "mixins/lists";
@use "variables";

//
// Headings
//

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: variables.$headings-margin-bottom;
  font-family: variables.$headings-font-family;
  font-weight: variables.$headings-font-weight;
  line-height: variables.$headings-line-height;
  color: variables.$headings-color;
}

h1, .h1 { font-size: variables.$font-size-h1; }
h2, .h2 { font-size: variables.$font-size-h2; }
h3, .h3 { font-size: variables.$font-size-h3; }
h4, .h4 { font-size: variables.$font-size-h4; }
h5, .h5 { font-size: variables.$font-size-h5; }
h6, .h6 { font-size: variables.$font-size-h6; }

.lead {
  font-size: variables.$lead-font-size;
  font-weight: variables.$lead-font-weight;
}

// Type display classes
.display-1 {
  font-size: variables.$display1-size;
  font-weight: variables.$display1-weight;
  line-height: variables.$display-line-height;
}
.display-2 {
  font-size: variables.$display2-size;
  font-weight: variables.$display2-weight;
  line-height: variables.$display-line-height;
}
.display-3 {
  font-size: variables.$display3-size;
  font-weight: variables.$display3-weight;
  line-height: variables.$display-line-height;
}
.display-4 {
  font-size: variables.$display4-size;
  font-weight: variables.$display4-weight;
  line-height: variables.$display-line-height;
}


//
// Horizontal rules
//

hr {
  margin-top: variables.$spacer-y;
  margin-bottom: variables.$spacer-y;
  border: 0;
  border-top: variables.$hr-border-width solid variables.$hr-border-color;
}


//
// Emphasis
//

small,
.small {
  font-size: variables.$small-font-size;
  font-weight: variables.$font-weight-normal;
}

mark,
.mark {
  padding: variables.$mark-padding;
  background-color: variables.$mark-bg;
}


//
// Lists
//

.list-unstyled {
  @include lists.list-unstyled;
}

// Inline turns list items into inline-block
.list-inline {
  @include lists.list-unstyled;
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: variables.$list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  padding: (variables.$spacer * 0.5) variables.$spacer;
  margin-bottom: variables.$spacer;
  font-size: variables.$blockquote-font-size;
  border-left: variables.$blockquote-border-width solid variables.$blockquote-border-color;
}

.blockquote-footer {
  display: block;
  font-size: 80%; // back to default font-size
  color: variables.$blockquote-small-color;

  &::before {
    content: "\2014 \00A0"; // em dash, nbsp
  }
}

// Opposite alignment of blockquote
.blockquote-reverse {
  padding-right: variables.$spacer;
  padding-left: 0;
  text-align: right;
  border-right: variables.$blockquote-border-width solid variables.$blockquote-border-color;
  border-left: 0;
}

.blockquote-reverse .blockquote-footer {
  &::before {
    content: "";
  }
  &::after {
    content: "\00A0 \2014"; // nbsp, em dash
  }
}
